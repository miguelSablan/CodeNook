generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Application {
  id           String   @id @default(cuid())
  userId       String 
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)  
  projectId    String  
  project      Project  @relation(fields: [projectId], references: [id], onDelete: Cascade) 
  appliedAt    DateTime @default(now())
}

model User {
  id            String    @id @default(cuid())
  username      String?   @unique
  email         String?   @unique
  name          String?
  password      String?
  image         String?
  bio           String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  emailVerified DateTime?
  skills        String[]
  accounts      Account[]
  sessions      Session[]
  applications  Application[]  // Track applications the user made
  projects      Project[]   @relation("ProjectOwner") // Projects owned by the user
}

model Project {
  id            String    @id @default(cuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  title         String
  description   String
  tags          String[]
  role          String
  authorId      String
  author        User      @relation("ProjectOwner", fields: [authorId], references: [id], onDelete: Cascade)
  applications  Application[]  // Track applications for the project
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}